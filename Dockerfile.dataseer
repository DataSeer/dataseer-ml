## Docker dataseer-ml image using GROBID DeLFT image as base image

# -------------------
# build builder image
# -------------------

FROM openjdk:8u275-jdk as builder

USER root

RUN apt-get update && \
    apt-get -y --no-install-recommends install apt-utils libxml2 

WORKDIR /opt/grobid-source

RUN mkdir -p .gradle
VOLUME /opt/grobid-source/.gradle

# gradle
COPY gradle/ ./gradle/
COPY gradlew ./
COPY gradle.properties ./
COPY build.gradle ./
COPY settings.gradle ./

# source
COPY grobid-home/ ./grobid-home/
COPY grobid-core/ ./grobid-core/
COPY grobid-service/ ./grobid-service/
COPY grobid-trainer/ ./grobid-trainer/
COPY dataseer-ml/ ./dataseer-ml/

RUN ./gradlew clean assemble install --no-daemon  --info --stacktrace

WORKDIR ./dataseer-ml/
RUN ./gradlew clean install --no-daemon  --info --stacktrace

WORKDIR /opt

# -------------------
# build runtime image
# -------------------

from grobid/grobid:0.6.2-SNAPSHOT

WORKDIR /opt

COPY --from=builder /opt/grobid-source/dataseer-ml/ ./grobid/dataseer-ml/
COPY --from=builder /root/.m2/repository/org ./grobid/dataseer-ml/lib/org

# trigger gradle install
WORKDIR /opt/grobid/dataseer-ml
RUN ./gradlew --version

WORKDIR /opt

# install JDK to get gradle working for launching the application
ENV TEMP_JDK_HOME=/tmp/jdk-${JAVA_VERSION}
ENV JDK_URL=https://github.com/AdoptOpenJDK/openjdk8-upstream-binaries/releases/download/jdk8u275-b01/OpenJDK8U-jdk_x64_linux_8u275b01.tar.gz
RUN curl --fail --show-error --location -q ${JDK_URL} -o /tmp/openjdk.tar.gz \
    && ls -lh /tmp/openjdk.tar.gz \
    && mkdir - "${TEMP_JDK_HOME}" \
    && tar --extract \
        --file /tmp/openjdk.tar.gz \
        --directory "${TEMP_JDK_HOME}" \
        --strip-components 1 \
        --no-same-owner 

ENV JAVA_HOME=/tmp/jdk-${JAVA_VERSION}
RUN echo $JAVA_HOME

WORKDIR /opt/grobid/dataseer-ml
CMD ["./gradlew", "appRun"]

ARG GROBID_VERSION
